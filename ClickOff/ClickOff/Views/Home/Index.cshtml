@model dynamic

@{
    ViewBag.Title = "Click-Off!";
}

<h2>Click-Off!</h2>

<div id="cookiesBaked" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="cookiesInBank" style="min-width: 310px; height: 400px; margin: 0 auto"></div>
<div id="cps" style="min-width: 310px; height: 400px; margin: 0 auto"></div>


@section Scripts{
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="~/signalr/hubs"></script>
    <script type="text/javascript">

        $(function() {
            $(document).ready(function() {
                Highcharts.setOptions({
                    global: {
                        useUTC: false
                    }
                });

                Highcharts.chart('cookiesBaked', {
                    chart: {
                        type: 'spline',
                        animation: Highcharts.svg, // don't animate in old IE
                        marginRight: 10,
                    },
                    title: {
                        text: 'Cookies baked'
                    },
                    xAxis: {
                        type: 'datetime',
                        tickPixelInterval: 150,
                        minRange: 8000
                    },
                    yAxis: {
                        title: {
                            text: 'Cookies'
                        }
                    },
                    tooltip: {
                        formatter: function() {
                            return '<b>' + this.series.name + '</b><br/>' +
                                Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
                                Highcharts.numberFormat(this.y, 2);
                        }
                    },
                    legend: {
                        enabled: false
                    },
                    exporting: {
                        enabled: true
                    },
                    series: [
                    ]
                });

                Highcharts.chart('cookiesInBank', {
                    chart: {
                        type: 'spline',
                        animation: Highcharts.svg, // don't animate in old IE
                        marginRight: 10,
                    },
                    title: {
                        text: 'Cookies in bank'
                    },
                    xAxis: {
                        type: 'datetime',
                        tickPixelInterval: 150,
                        minRange: 8000
                    },
                    yAxis: {
                        title: {
                            text: 'Cookies'
                        }
                    },
                    tooltip: {
                        formatter: function() {
                            return '<b>' + this.series.name + '</b><br/>' +
                                Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
                                Highcharts.numberFormat(this.y, 2);
                        }
                    },
                    legend: {
                        enabled: false
                    },
                    exporting: {
                        enabled: true
                    },
                    series: [
                    ]
                });

                Highcharts.chart('cps', {
                    chart: {
                        type: 'spline',
                        animation: Highcharts.svg, // don't animate in old IE
                        marginRight: 10,
                    },
                    title: {
                        text: 'Cookies per second'
                    },
                    xAxis: {
                        type: 'datetime',
                        tickPixelInterval: 150,
                        minRange: 8000
                    },
                    yAxis: {
                        title: {
                            text: 'Cps'
                        }
                    },
                    tooltip: {
                        formatter: function() {
                            return '<b>' + this.series.name + '</b><br/>' +
                                Highcharts.dateFormat('%Y-%m-%d %H:%M:%S', this.x) + '<br/>' +
                                Highcharts.numberFormat(this.y, 2);
                        }
                    },
                    plotOptions: {
                        series: {
                            events: {
                                legendItemClick: function (event) {

                                    var toggleSeries = function (chartId, originSeries) {
                                        var chart = $(chartId).highcharts();
                                        var series = chart.get(originSeries.options.id); //get corresponding series

                                        if (series) {
                                            if (originSeries.visible) {
                                                series.hide();
                                            } else {
                                                series.show();
                                            }
                                        }
                                    }

                                    toggleSeries("#cookiesBaked", this);
                                    toggleSeries("#cookiesInBank", this);
                                }
                            }
                        }
                    },
                    exporting: {
                        enabled: true
                    },
                    series: [
                    ]
                });
            });
        });

    </script>
    <script type="text/javascript">
        var seriesOptions = [];

        $(function() {
            // Declare a proxy to reference the hub.
            var chat = $.connection.resultHub;
            // Create a function that the hub can call to broadcast messages.
            chat.client.updateCookies = function(name, request) {

                var seriesIndex = -1;
                for (var i = 0; i < seriesOptions.length; i++) {
                    if (seriesOptions[i].name === name) {
                        seriesIndex = i;
                        break;
                    }
                }

                if (seriesIndex < 0) {
                    var options = { id: 'series' + seriesOptions.length, name: name };
                    Highcharts.charts[0].addSeries(options);
                    Highcharts.charts[1].addSeries(options);
                    Highcharts.charts[2].addSeries(options);
                    seriesIndex = seriesOptions.push(options) - 1;
                }

                var x = (new Date()).getTime(), // current time
                    y = request.CookiesBaked;
                Highcharts.charts[0].series[seriesIndex].addPoint([x, y], true, false);
                y = request.CookiesInBank;
                Highcharts.charts[1].series[seriesIndex].addPoint([x, y], true, false);
                y = request.Cps;
                Highcharts.charts[2].series[seriesIndex].addPoint([x, y], true, false);

            };


            //// Get the user name and store it to prepend to messages.
            //$('#displayname').val(prompt('Enter your name:', ''));
            //// Set initial focus to message input box.
            //$('#message').focus();
            //// Start the connection.
            $.connection.hub.start();
        });
    </script>
}
